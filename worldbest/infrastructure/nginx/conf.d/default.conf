server {
    listen 80;
    server_name localhost;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Frontend
    location / {
        proxy_pass http://web_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # WebSocket connection for real-time features
    location /ws {
        proxy_pass http://ws_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }
    
    # API Gateway
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;
        
        # CORS Headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Remove /api prefix when proxying
        rewrite ^/api/(.*) /$1 break;
        
        # Route to appropriate service based on path
        location ~ ^/api/v1/auth {
            limit_req zone=auth burst=5 nodelay;
            proxy_pass http://auth_backend;
            include /etc/nginx/proxy_params.conf;
        }
        
        location ~ ^/api/v1/(projects|books|chapters|scenes|characters|locations|cultures|timelines) {
            proxy_pass http://project_backend;
            include /etc/nginx/proxy_params.conf;
            
            # Cache GET requests for read-heavy endpoints
            location ~ ^/api/v1/(projects|characters|locations)/[^/]+$ {
                proxy_cache api_cache;
                proxy_cache_valid 200 5m;
                proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
                proxy_cache_lock on;
                proxy_pass http://project_backend;
                include /etc/nginx/proxy_params.conf;
            }
        }
        
        location ~ ^/api/v1/ai {
            limit_req zone=ai burst=3 nodelay;
            proxy_pass http://ai_backend;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            include /etc/nginx/proxy_params.conf;
        }
        
        location ~ ^/api/v1/export {
            proxy_pass http://export_backend;
            proxy_read_timeout 600s;
            include /etc/nginx/proxy_params.conf;
        }
        
        location ~ ^/api/v1/billing {
            proxy_pass http://billing_backend;
            include /etc/nginx/proxy_params.conf;
        }
        
        # Default fallback
        return 404;
    }
    
    # Stripe Webhook endpoint (no rate limiting)
    location /webhook/stripe {
        proxy_pass http://billing_backend/webhook/stripe;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Stripe requires raw body
        proxy_set_header Content-Type $content_type;
        proxy_buffering off;
    }
    
    # Static files and media
    location /static {
        alias /var/www/static;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    location /media {
        alias /var/www/media;
        expires 7d;
        add_header Cache-Control "public";
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}